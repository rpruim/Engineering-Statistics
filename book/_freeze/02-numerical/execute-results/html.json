{
  "hash": "20c5bd0137cf6c4d2f82c9d19310f477",
  "result": {
    "markdown": "# Numerical Summaries {#sec-numerical-summaries}\n\n\n\n\n\n\n## Tabulating Data\nA table is one kind of numerical summary of a data set.  In fact, you can think of histograms\nand bar graphs as graphical representations of summary tables.  But sometimes it is nice to\nhave the table itself.  R provides several ways of obtaining such tables.\n\n### Tabulating a categorical variable\n\n#### The formula interface {-}\n\nThere are several functions for tabulating categorical variables.\n`tally()`  uses a syntax that is very similar to `bargraph()`.\nWe'll call this method the **formula interface**.\n(R calls anything with a tilde (`~`) a formula.)\n\n`tally()` allows us to choose raw counts, proportions, or percentages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally( ~ sex, data = KidsFeet )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsex\n B  G \n20 19 \n```\n:::\n\n```{.r .cell-code}\ntally( ~ sex, data = KidsFeet, format = \"prop\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsex\n        B         G \n0.5128205 0.4871795 \n```\n:::\n\n```{.r .cell-code}\ntally( ~ sex, data = KidsFeet, format = \"perc\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsex\n       B        G \n51.28205 48.71795 \n```\n:::\n:::\n\n\n\n#### The \\$-interface {-}\n\n`table()` and its cousins use the `$` operator which selects one variable \nout of a data frame.\n\n::: {.cell}\n\n```{.r .cell-code}\nKidsFeet$sex      # general syntax: dataframe$variable\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] B B B B B B B G G B B B B B G G G G G G B B G G G B G B B B G G G B B G G G\n[39] G\nLevels: B G\n```\n:::\n\n```{.r .cell-code}\ntable(KidsFeet$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n B  G \n20 19 \n```\n:::\n\n```{.r .cell-code}\n# tally() is bilingual:\ntally(KidsFeet$sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nX\n B  G \n20 19 \n```\n:::\n:::\n\n\nWe'll call this interface the **`$`-interface**.\n\n### Two interfaces\n\nSome functions in R require the formula interface, some require the\n`$`-interface, and some allow you to use either one.[^mosaic-formula]\n\n[^mosaic-formula]: One of the things that the `mosaic` package does is provide a\nformula interface for many functions that only had a `$`-interface before.\n\n<!-- % For example, histogram will also work like this. -->\n<!-- % % gf_histogram( HELPrct$age ) -->\n<!-- % But notice that the output is not quite as nice, since the default label  -->\n<!-- % for the horizontal axis now shows both the data frame name and the variable name -->\n<!-- % with a \\code{\\$} between.   -->\n\n*My advice is to use formula interfaces whenever they are available and to choose tools that make this possible.*\n\n## Tabulating a quantitative variable\n\nAlthough `tally()` and `table()` work with quantitative variables\nas well as categorical variables, this is only useful when there are not too\nmany different values for the variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally( ~age, data = HELPrct )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nage\n19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 \n 1  2  3  8  5  8  7 13 18 15 18 18 20 28 35 18 25 23 20 18 27 10 20 10 13  7 \n45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 \n13  5 14  5  8  2  1  1  3  1  2  1  2  2  2  1 \n```\n:::\n:::\n\n\n\n### Tabulating in bins (optional)\nUsually a graph is the best way to display and summarize quantitative data, but\nif you need to creat a summary table, you may need to group quantitative data\ninto bins.  We just have to tell R what the bins are.\nFor example, suppose we wanted to group the 20s, 30s, 40s, etc. together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# let's add a new variable to HELPrct\nHELPrct <- \n  HELPrct |>\n  mutate(binnedAge = cut(age, breaks = c(10,20,30,40,50,60,70) ))\nhead(HELPrct)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"age\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"anysubstatus\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"anysub\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"cesd\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"d1\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"daysanysub\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"dayslink\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"drugrisk\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"e2b\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"female\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"sex\"],\"name\":[11],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"g1b\"],\"name\":[12],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"homeless\"],\"name\":[13],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"i1\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"i2\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"id\"],\"name\":[16],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"indtot\"],\"name\":[17],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"linkstatus\"],\"name\":[18],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"link\"],\"name\":[19],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"mcs\"],\"name\":[20],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pcs\"],\"name\":[21],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"pss_fr\"],\"name\":[22],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"racegrp\"],\"name\":[23],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"satreat\"],\"name\":[24],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"sexrisk\"],\"name\":[25],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"substance\"],\"name\":[26],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"treat\"],\"name\":[27],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"avg_drinks\"],\"name\":[28],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"max_drinks\"],\"name\":[29],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"hospitalizations\"],\"name\":[30],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"binnedAge\"],\"name\":[31],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"37\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"49\",\"5\":\"3\",\"6\":\"177\",\"7\":\"225\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"0\",\"11\":\"male\",\"12\":\"yes\",\"13\":\"housed\",\"14\":\"13\",\"15\":\"26\",\"16\":\"1\",\"17\":\"39\",\"18\":\"1\",\"19\":\"yes\",\"20\":\"25.111990\",\"21\":\"58.41369\",\"22\":\"0\",\"23\":\"black\",\"24\":\"no\",\"25\":\"4\",\"26\":\"cocaine\",\"27\":\"yes\",\"28\":\"13\",\"29\":\"26\",\"30\":\"3\",\"31\":\"(30,40]\",\"_rn_\":\"1\"},{\"1\":\"37\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"30\",\"5\":\"22\",\"6\":\"2\",\"7\":\"NA\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"0\",\"11\":\"male\",\"12\":\"yes\",\"13\":\"homeless\",\"14\":\"56\",\"15\":\"62\",\"16\":\"2\",\"17\":\"43\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"26.670307\",\"21\":\"36.03694\",\"22\":\"1\",\"23\":\"white\",\"24\":\"no\",\"25\":\"7\",\"26\":\"alcohol\",\"27\":\"yes\",\"28\":\"56\",\"29\":\"62\",\"30\":\"22\",\"31\":\"(30,40]\",\"_rn_\":\"2\"},{\"1\":\"26\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"39\",\"5\":\"0\",\"6\":\"3\",\"7\":\"365\",\"8\":\"20\",\"9\":\"NA\",\"10\":\"0\",\"11\":\"male\",\"12\":\"no\",\"13\":\"housed\",\"14\":\"0\",\"15\":\"0\",\"16\":\"3\",\"17\":\"41\",\"18\":\"0\",\"19\":\"no\",\"20\":\"6.762923\",\"21\":\"74.80633\",\"22\":\"13\",\"23\":\"black\",\"24\":\"no\",\"25\":\"2\",\"26\":\"heroin\",\"27\":\"no\",\"28\":\"0\",\"29\":\"0\",\"30\":\"0\",\"31\":\"(20,30]\",\"_rn_\":\"3\"},{\"1\":\"39\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"15\",\"5\":\"2\",\"6\":\"189\",\"7\":\"343\",\"8\":\"0\",\"9\":\"1\",\"10\":\"1\",\"11\":\"female\",\"12\":\"no\",\"13\":\"housed\",\"14\":\"5\",\"15\":\"5\",\"16\":\"4\",\"17\":\"28\",\"18\":\"0\",\"19\":\"no\",\"20\":\"43.967880\",\"21\":\"61.93168\",\"22\":\"11\",\"23\":\"white\",\"24\":\"yes\",\"25\":\"4\",\"26\":\"heroin\",\"27\":\"no\",\"28\":\"5\",\"29\":\"5\",\"30\":\"2\",\"31\":\"(30,40]\",\"_rn_\":\"4\"},{\"1\":\"32\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"39\",\"5\":\"12\",\"6\":\"2\",\"7\":\"57\",\"8\":\"0\",\"9\":\"1\",\"10\":\"0\",\"11\":\"male\",\"12\":\"no\",\"13\":\"homeless\",\"14\":\"10\",\"15\":\"13\",\"16\":\"5\",\"17\":\"38\",\"18\":\"1\",\"19\":\"yes\",\"20\":\"21.675755\",\"21\":\"37.34558\",\"22\":\"10\",\"23\":\"black\",\"24\":\"no\",\"25\":\"6\",\"26\":\"cocaine\",\"27\":\"no\",\"28\":\"10\",\"29\":\"13\",\"30\":\"12\",\"31\":\"(30,40]\",\"_rn_\":\"5\"},{\"1\":\"47\",\"2\":\"1\",\"3\":\"yes\",\"4\":\"6\",\"5\":\"1\",\"6\":\"31\",\"7\":\"365\",\"8\":\"0\",\"9\":\"NA\",\"10\":\"1\",\"11\":\"female\",\"12\":\"no\",\"13\":\"housed\",\"14\":\"4\",\"15\":\"4\",\"16\":\"6\",\"17\":\"29\",\"18\":\"0\",\"19\":\"no\",\"20\":\"55.508991\",\"21\":\"46.47521\",\"22\":\"5\",\"23\":\"black\",\"24\":\"no\",\"25\":\"5\",\"26\":\"cocaine\",\"27\":\"yes\",\"28\":\"4\",\"29\":\"4\",\"30\":\"1\",\"31\":\"(40,50]\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ntally( ~ binnedAge, data = HELPrct) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nbinnedAge\n(10,20] (20,30] (30,40] (40,50] (50,60] (60,70] \n      3     113     224      97      16       0 \n```\n:::\n:::\n\n\nThat's not quite what we wanted: 30 is in with the 20s, for example.\nHere's how we fix that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHELPrct <- HELPrct |>\n  mutate(binnedAge = cut(age, breaks = c(10,20,30,40,50,60,70), right = FALSE))\ntally( ~ binnedAge, data = HELPrct ) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nbinnedAge\n[10,20) [20,30) [30,40) [40,50) [50,60) [60,70) \n      1      97     232     105      17       1 \n```\n:::\n:::\n\n\n\n\nWe won't use this very often, since typically seeing this information in a histogram is \nmore useful.\n\n\n## Cross-tables: Tabulating two or more variables\n\n`tally()` can also compute cross tables for two (or more) variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(sex ~ substance, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        substance\nsex      alcohol cocaine heroin\n  female      36      41     30\n  male       141     111     94\n```\n:::\n\n```{.r .cell-code}\ntally(~ sex + substance, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        substance\nsex      alcohol cocaine heroin\n  female      36      41     30\n  male       141     111     94\n```\n:::\n:::\n\n\n\n## Working with Pre-Tabulated Data\n\nSometimes data arrive pre-tabulated.  We can use `gf_col()` instead\nof `gf_bar()` to graph pre-tabulated data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(abd)           # data sets from Analysis of Biological Data\nTeenDeaths\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"cause\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"deaths\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Accidents\",\"2\":\"6688\"},{\"1\":\"Homicide\",\"2\":\"2093\"},{\"1\":\"Suicide\",\"2\":\"1615\"},{\"1\":\"Malignant tumor\",\"2\":\"745\"},{\"1\":\"Heart disease\",\"2\":\"463\"},{\"1\":\"Congenital abnormalities\",\"2\":\"222\"},{\"1\":\"Chronic respiratory disease\",\"2\":\"107\"},{\"1\":\"Influenza and pneumonia\",\"2\":\"73\"},{\"1\":\"Cerebrovascular diseases\",\"2\":\"67\"},{\"1\":\"Other tumor\",\"2\":\"52\"},{\"1\":\"All other causes\",\"2\":\"1653\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ngf_col(deaths ~ cause, data = TeenDeaths) |>\n  gf_refine(coord_flip())    # flip x and y axes\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/teen-deaths-1.png){width=432}\n:::\n:::\n\n\n\nNotice that by default the causes are displayed in alphabetical order.\nR assumes that categorical data is nominal \n(that is, there is no particular natural or logical ordering to the categories) \nunless you say otherwise.\n\nHere is an easy way to have things appear in a different order. The causes of death are reordered in order of increasing number of `deaths` caused.\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_col( deaths ~ reorder(cause, deaths), data = TeenDeaths) |>\n  gf_refine(coord_flip()) |>\n  gf_labs(x = 'Cause of Death', y = 'Number of Deaths')\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/teen-deaths-order-1.png){width=432}\n:::\n:::\n\n\n\n\n## Summarizing Distributions of Quantitative Variables\n\n### Important Note {-}\n\nNumerical summaries are a convenient way to \ndescribe a distribution, but remember that numerical summaries \ndo not necessarily tell you everything there is to know about a distribution.  When working with a new dataset, it is *always*  important to explore the data as fully as possible (commonly including graphical as well as numerical summaries, and sometimes even examining the data table directly) before accepting any simplified summary as a good representation of the data.  You might discover certain patterns in the data, interesting features, or even outliers or mistakes in the data, that make certain summaries misrepresentations of the whole.\n\n### Notation {-}\nIn statistics $n$ (or sometimes $N$) almost always means the number \nof observations (i.e., the number of rows in a data frame).\n\nIf $y$ is a variable in a data set with $n$ cases, we \ncan denote the $n$ values of $y$ as \n<!-- begin itemize -->\n\n#. $y_1, y_2, y_3, \\dots y_n$ (in the original order of the data).\n#. $y_{(1)}, y_{(2)}, y_{(3)}, \\dots  y_{(n)}$ (in sorted order from smallest to largest).\n\n<!-- end itemize -->\n\nThe symbol $\\displaystyle  \\sum$ represents summation (adding up a bunch of values).\n\n## Measures of Center\n\nMeasures of center attempt to give us a sense of what is a\ntypical value for the distribution.\n\n$$\n\\begin{aligned}\n\\mbox{mean of $y$} \n&=\n\\overline{y}\n= \\frac{\\displaystyle \\sum_{i = 1}^{n} y_i}{n}\n= \\frac{\\mbox{sum of values}}{\\mbox{number of values}}\n\\\\[3mm]\n\\mbox{median of $y$}\n&=\n\\mbox{the ``middle'' number}\n\\\\\n& \\quad\\quad \\mbox{(after putting the numbers in increasing order)}\n\\end{aligned}\n$$\n\n<!-- begin itemize -->\n\n#. The mean is the \"balancing point\" of the distribution.\n#. The median[^median] is the 50th percentile: half of the \n   distribution is below the median, half is above.\n#. If the distribution is symmetric, then the mean and median are the same.\n#. In a skewed distribution, the mean is pulled farther toward the tail than the median is.\n#. *A few very large or very small values can change the mean a lot*, \nso the mean is **sensitive** to outliers  and is a better measure of center\nwhen the distribution is symmetric than when it is skewed.\n#. The median is a **resistant** measure  (resistant to the presence of outlier) -- it is not affected much by a few very large or very small values.\n<!-- end itemize -->\n\n[^median]: A note about calculating medians: If the number of datapoints is odd,\nthe median is the middle value (after putting the observations in increasing\norder). In cases where there is an even number of observations, the median is\nthe average of the middle two observations.  \n\n\n## Measures of Spread\n\n$$\n\\begin{aligned}\n\\mbox{variance of $y$}\n= s^2_y \n&= \n\\frac{\\displaystyle \\sum  {i = 1}^{n} (y_i - \\overline{y})^2 }{n-1}\n\\\\[4mm]\n\\mbox{standard deviaiton of $y$}  = s_y \n&= \\sqrt{s^2_y} \n\\\\\n&= \\mbox{square root of variance}\n\\\\[4mm]\n\\mbox{interquartile range}  = \\mbox{IQR}\n&= Q_3 - Q_1 \n\\\\\n& = \\mbox{difference between first and third quartiles (defined shortly)}\n\\end{aligned}\n$$\n\n<!-- begin itemize -->\n\n#. Roughly, the standard deviation is the \"average deviation from the mean\".  (That's not\nexactly right because of the squaring involved and because we are dividing\nby $n-1$ instead of by $n$.  More on that denominator later.)\n#. The mean and standard deviation are especially useful for describing \n**normal distributions**  and other unimodal, symmetric distributions that\nare roughly \"bell-shaped\".  (We'll learn more about normal distributions later.)\n#. Like the mean, the variance and standard deviation are \nsensitive to outliers and less suited for summarizing skewed distributions.\n#. It is perhaps of some value to compute the variance and standard deviation by hand\nonce or twice to make sure you understand how these measures are defined, but we will\ntypically let R do the calculations for us.\n<!-- end itemize -->\n\nTo get a numerical summary of a variable (a statistic), we need to tell \nR which statistic we want and the variable and data frame involved.\nThere several ways we can do this in R\nHere are several ways to get the mean, for example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(HELPrct$age)            # this is the old fashioned way\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35.65342\n```\n:::\n\n```{.r .cell-code}\nmean(~ age, data = HELPrct)  # similar to our plotting methods; only works for some functions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35.65342\n```\n:::\n\n```{.r .cell-code}\ndf_stats(~ age, data = HELPrct, mean)  # formula-based and very flexible\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"age\",\"2\":\"35.65342\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nUsing the formula style, we can now compute several different statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean( ~ age, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35.65342\n```\n:::\n\n```{.r .cell-code}\nsd( ~ age, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7.710266\n```\n:::\n\n```{.r .cell-code}\nvar( ~ age, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 59.4482\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian( ~ age, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\nIQR( ~ age, data = HELPrct) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\ndf_stats( ~ age, data = HELPrct)  # this computes several statistics at once\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"min\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q1\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"median\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q3\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"missing\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"age\",\"2\":\"19\",\"3\":\"30\",\"4\":\"35\",\"5\":\"40\",\"6\":\"60\",\"7\":\"35.65342\",\"8\":\"7.710266\",\"9\":\"453\",\"10\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nIt is also possible to compute these statistics separately for each of several groups.\nThe syntax is much like the the syntax we used when plotting.  In fact, we have two \nchoices for the formula:  `y ~ x` or `~ x | z`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(age ~ sex, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  female     male \n36.25234 35.46821 \n```\n:::\n\n```{.r .cell-code}\nsd(age ~ sex, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  female     male \n7.584858 7.750110 \n```\n:::\n\n```{.r .cell-code}\ndf_stats( ~ age | sex, data = HELPrct )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sex\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"min\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q1\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"median\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q3\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"missing\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"age\",\"2\":\"female\",\"3\":\"21\",\"4\":\"31\",\"5\":\"35\",\"6\":\"40.5\",\"7\":\"58\",\"8\":\"36.25234\",\"9\":\"7.584858\",\"10\":\"107\",\"11\":\"0\"},{\"1\":\"age\",\"2\":\"male\",\"3\":\"19\",\"4\":\"30\",\"5\":\"35\",\"6\":\"40.0\",\"7\":\"60\",\"8\":\"35.46821\",\"9\":\"7.750110\",\"10\":\"346\",\"11\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n### A word of caution\nNone of these measures (especially the mean and median) \nis a particularly good summary of a distribution if the distribution is not unimodal.\nThe histogram below shows the lengths of eruptions of the Old Faithful geyser\nat Yellowstone National Park.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(faraway)\ndf_stats(~ Duration, data = oldfaith)\n```\n\n::: {#fig-faithful-1 .cell-output-display}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"min\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q1\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"median\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Q3\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mean\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"missing\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Duration\",\"2\":\"96\",\"3\":\"130\",\"4\":\"240\",\"5\":\"267.75\",\"6\":\"306\",\"7\":\"209.8778\",\"8\":\"68.39213\",\"9\":\"270\",\"10\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n\nThe distribution of Old Faithful eruption times is bimodal, suggesting two types of eruptions. A single number doesn't do a good job of summarizing this sort of distribution.\n:::\n\n```{.r .cell-code}\ngf_histogram( ~ Duration, data = oldfaith,  bins = 20) |> \n\tgf_labs(title = \"Old Faithful Eruption Times\", x = \"duration (sec)\") \n```\n\n::: {.cell-output-display}\n![The distribution of Old Faithful eruption times is bimodal, suggesting two types of eruptions. A single number doesn't do a good job of summarizing this sort of distribution.](02-numerical_files/figure-html/fig-faithful-1.png){#fig-faithful-2 width=576}\n:::\n:::\n\n\nNotice that the mean and median do not represent typical eruption times very well.\nNearly all eruptions are either quite a bit shorter or quite a bit longer.\n(This is especially true of the mean.)\n\n\n### Box plots\n\nBoxplots (also called box-and-whisker plots) are a graphical representation of a \n**5-number summary** of a quantitative variable.  The five numbers are\nthe five **quantiles**:\n<!-- begin itemize -->\n\n#. $Q_0$, the minimum\n#. $Q_1$, the first quartile (25th percintile) \n#. $Q_2$, the median (50th percentile)\n#. $Q_3$, the third quartile (75th percentile)\n#. $Q_4$, the maximum\n\n<!-- end itemize -->\n\n::: {.cell fig.label='Boxplots show a 5-number summary graphically.'}\n\n```{.r .cell-code}\ngf_boxplot(~age, data = HELPrct)\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/fig-boxplot-1.png){#fig-boxplot width=432}\n:::\n:::\n\n\n\nBoxplots provide a way of comparing multiple groups that is especially informative and visually effective.  Here is one way to make boxplots of multiple groups (it \nshould look familiar from what we know about histogram):\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(~age | substance ~ ., data = HELPrct)\n```\n\n::: {.cell-output-display}\n![Facets are not the best way to display this sort of plot.](02-numerical_files/figure-html/fig-boxplot-facets}-1.png){#fig-boxplot-facets} width=432}\n:::\n:::\n\n\nBut `gf_boxplot()` has a better way.  Put the quantitative variable on one side of the\nwiggle and the categorical on the other.  The placement determines which goes along the \nvertical axis and which along the horizontal axis -- just like it did for `gf_point()`.\n\n::: {#fig-boxplot2 .cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\ngf_boxplot(substance ~ age, data = HELPrct)\ngf_boxplot(age ~ substance, data = HELPrct)\n```\n\n::: {.cell-output-display}\n![Horizontal boxplots often use space more efficiently](02-numerical_files/figure-html/fig-boxplot2-1.png){#fig-boxplot2-1 width=95%}\n:::\n\n::: {.cell-output-display}\n![But vertical boxplots follow the common \"response variable on the y-axis\" pattern.](02-numerical_files/figure-html/fig-boxplot2-2.png){#fig-boxplot2-2 width=95%}\n:::\n\nBoxplots are primarily used to compare multiple distributions.  We can have a categorical variable on one of the axes to produce \"side-by-side boxplots\".\n:::\n\n\n\nAnd we can combine this idea with conditioning. \n<!-- Careful: The quantitative variable must be the \"y\" variable in the formula. -->\n\n\n::: {#fig-boxplot3 .cell}\n\n```{.r .cell-code}\ngf_boxplot(age ~ substance | homeless, data = HELPrct)\ngf_boxplot(substance ~ age | homeless ~ ., data = HELPrct)\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/fig-boxplot3-1.png){#fig-boxplot3-1 width=432}\n:::\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/fig-boxplot3-2.png){#fig-boxplot3-2 width=432}\n:::\n\nSide-by-side boxplots with faceting.\n:::\n\n\n\n### Small data sets\n\nWhen we have relatively small data sets, it may not make sense to use a boxplot.\nWith very few observations, boxplots can be misleading, in that they suggest the\npresence of more observations than are really contained in the dataset. In these\ncases, it may be better to display all the data.  `gf_jitter()` allows you to\nput a categorical variable along one axis and a quantitative variable along the\nother. For some data sets, either option can produce a plot that gives a good\npicture of the data.\n\n\n::: {#fig-gf-point-quant-by-cat .cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\ngf_jitter( weight ~ sex, data = Mosquitoes, width = 0.1, height = 0)\ngf_boxplot( weight ~ sex, data = Mosquitoes)\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/fig-gf-point-quant-by-cat-1.png){#fig-gf-point-quant-by-cat-1 width=432}\n:::\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/fig-gf-point-quant-by-cat-2.png){#fig-gf-point-quant-by-cat-2 width=432}\n:::\n\nJitter can be useful for displaying relatively small data sets that have duplicated values.\n:::\n\n\n\nNote the effect of the  `width = 0.1, height = 0` -- \nthis tells `gf_jitter()` to move each data point slightly left or right, but not at all up or down. \nThis can be used to reduce overplotting (data points being plotted on top of one another) without losing \nany information, making it clearer how many data points were observed for each possible combination of x- and y-values. \n\n## Summarizing Categorical Variables\n\nThe most common summary of a categorical variable is the **proportion**\nof observations in each category. For a single category:\n\n$$\n\\begin{aligned}\n\\hat p & = \\frac{\\mbox{number in one category}}{n}\n\\end{aligned}\n$$\n\n\nProportions can be expressed as fractions, decimals or percents.\nFor example, if there are \n10 observations in one category and $n = 50$ observations in all, then \n\n$$\n\\hat p = \\frac{10}{25} = \\frac{2}{5} =  0.40 = 40\\%\n$$\n\nIf we code our categorical variable using 1 for observations in a\nsingle category of interst -- \"the one category\" --\nand 0 for observations in any other category, then\n*a proportion is a sample mean*.\n\n$$\n\\frac{ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + \n0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 }{25} = \\frac{10}{25}\n$$\n\n## Relationships Between Two Variables\n\nIt is also possible to give numerical summaries of the relationship\nbetween two variables.  The most common one is the **correlation coefficient**,\nwhich we will learn about later.\n\n\n{{< pagebreak >}}\n\n\n\n## Exercises\n\n::: {.problem #exr-small-variance}\n**Small variance**\n\nCreate a data set with $n = 6$ values, each an integer between 0 and 10 (inclusive) \nthat has the smallest possible variance.\nCompute the mean and variance of this data set \"by hand\"\n(that is, without using `mean()` or `sd()` or `var()` or `df_stats(), etc.\nin R or similar features on a calculator).\nYou can check your hand calculation using R, but show the hand calclulation.\n:::\n\n::: {.solution}\nThe variance will be smallest if all the values are equal to the mean value.\nIn that case the variance will be 0.\n\nIf you require all of the numbers to be distinct, the best you can do is \n6 consecutive numbers\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(x = 1:6) |> df_stats(~ x, mean, var, sd)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"var\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"x\",\"2\":\"3.5\",\"3\":\"3.5\",\"4\":\"1.870829\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n::: {.problem #exr-large-variance}\n**Large variance**\n\nCreate a data set with $n = 6$ values, each an integer between 0 and 10 (inclusive) \nthat has the largest possible variance.\nCompute the variance of this data set \"by hand\"\n(that is, without using `mean()` or `sd()` or \n`var()` or `df_stats()`, etc. in R or similar features on a calculator). \nYou can check your hand calculation using R, but show the hand calclulation.\n:::\n\n::: {.solution}\nThe variance will be largest if all the values are far from the mean.\nIf we have a data set with three 0's and 3 10's, then the mean is 5 and the \nvariance is\n\n::: {.cell}\n\n```{.r .cell-code}\n( 3*(0-5)^2 + 3*(10-5)^2 ) / 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30\n```\n:::\n:::\n\n\n\tIf you require the numbers to be distinct, then the best we can do is\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(x = c(0,1,2,8,9,10)) |> df_stats(~ x, mean, var, sd)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"response\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"var\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"x\",\"2\":\"5\",\"3\":\"20\",\"4\":\"4.472136\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n::: {.problem #exr-drinks-per-day}\n**Drinks per day, graphical summary**\n\nCreate side-by-side boxplots of the variable `i1`  (average number of\ndrinks per day) comparing the different `substance` groups\nin the `HELPrct` data frame.\n\nFor each `variable` substance  group, explain how you can tell from the \nboxplots whether the mean will be larger than the median or the median \nlarger than the mean.\n:::\n\n::: {.solution}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(i1 ~ substance , data = HELPrct)\n```\n\n::: {.cell-output-display}\n![](02-numerical_files/figure-html/unnamed-chunk-12-1.png){width=432}\n:::\n:::\n\n\nThe means are larger because the distributions have longer tails in the \nhigher direction.\n:::\n\n::: {.problem #exr-drinks-per-day-numerical}\n**Drinks per day, numerical summary**\n\nCompute the mean and median values of `i1` (average number of\ndrinks per day) for each of the `substance` groups in the \n`HELPrct` data frame.\n:::\n\n::: {.solution}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(i1 ~ substance, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  alcohol   cocaine    heroin \n29.192090 12.131579  8.879032 \n```\n:::\n\n```{.r .cell-code}\nmedian(i1 ~ substance, data = HELPrct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nalcohol cocaine  heroin \n     25       6       4 \n```\n:::\n:::\n\n:::\n\n",
    "supporting": [
      "02-numerical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}